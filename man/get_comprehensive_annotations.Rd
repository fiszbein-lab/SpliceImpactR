% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_protein_features.R
\name{get_comprehensive_annotations}
\alias{get_comprehensive_annotations}
\title{Combine multiple sources of protein feature annotations}
\usage{
get_comprehensive_annotations(
  protein_feature_list,
  load_path_list = NULL,
  read_path = NULL
)
}
\arguments{
\item{protein_feature_list}{List of \code{data.table} objects,
typically from [get_protein_features()] or [get_manual_features()].}

\item{load_path_list}{Optional vector of file paths to load each
feature source from disk (instead of providing in memory).}

\item{save_path}{Optional path to cache the combined annotations.}
}
\value{
A combined \code{data.table} containing all unique feature rows.
}
\description{
Aggregates all available feature tables (e.g., biomaRt + manual)
into a single unified long-format annotation table.
}
\examples{
user_df <- data.table(
  ensembl_transcript_id = c(
    "ENST00000511072","ENST00000374900","ENST00000373020","ENST00000456328",
    "ENST00000367770","ENST00000331789","ENST00000335137","ENST00000361567",
    NA,                    "ENST00000380152"
  ),
  ensembl_peptide_id = c(
    "ENSP00000426975", NA,                   "ENSP00000362048","ENSP00000407743",
    "ENSP00000356802","ENSP00000326734", NA,                  "ENSP00000354587",
    "ENSP00000364035", NA
  ),
  name = c(
    "Low complexity","Transmembrane helix","Coiled-coil","Signal peptide",
    "Transmembrane helix","Low complexity","Coiled-coil","Transmembrane helix",
    "Signal peptide","Low complexity"
  ),
  start = c(80L, 201L, 35L, 1L, 410L, 150L, 220L, 30L, 1L, 300L),
  stop  = c(120L,223L, 80L, 20L, 430L, 190L, 260L, 55L, 24L, 360L),
  database   = c("seg","tmhmm","ncoils","signalp","tmhmm","seg","ncoils","tmhmm","signalp", NA),
  alt_name   = c(NA,"TMhelix",NA,"SignalP-noTM", "TMhelix", NA, NA, "TMhelix", "SignalP-TAT", NA),
  feature_id = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
)
user_features <- get_manual_features(user_df)
annotation_df <- get_annotation(load = "test")
interpro_features <- get_protein_features(c("interpro"), annotation_df$annotations, timeout = 600, test = TRUE)
protein_feature_total <- get_comprehensive_annotations(list(user_df, interpro_features))

}
