% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_frameshifts.R
\name{compare_frames}
\alias{compare_frames}
\title{Identify frameshifts and rescue events between transcript pairs}
\usage{
compare_frames(hits, annotations, allow_ale_fs = FALSE)
}
\arguments{
\item{hits}{`data.frame` or `data.table` containing splicing event metadata,
typically output from [compare_sequences_alignment()]. Must include
columns such as `event_type_inc`, `transcript_id_inc`, `transcript_id_exc`,
`exons_inc`, `exons_exc`, and `pc_class`.}

\item{annotations}{from get_annotations (annotations)}

\item{allow_ale_fs}{Logical (default `FALSE`).
Whether to allow ALE/HLE events to be considered frameshifting.}
}
\value{
A `data.table` identical to `hits` with four appended columns:
\describe{
  \item{frame_call}{`"FrameShift"` or `"PartialMatch"`.}
  \item{rescue}{Rescue classification (e.g. `"noRescue"` or type string).}
  \item{frame_check_exon1}{Exon ID used for inclusion isoform comparison.}
  \item{frame_check_exon2}{Exon ID used for exclusion isoform comparison.}
}
}
\description{
Function that evaluates whether inclusion and exclusion transcript
isoforms for each alternative splicing event maintain the reading frame or
induce a frameshift. Optionally identifies "rescue" cases where downstream
coding structure re-aligns the frame.
}
\seealso{
[build_coding_index()],
[.compare_boundary_start()],
[.compare_boundary_end()],
[.compare_at_overlap_start()],
[.compare_at_overlap_end()],
[.compare_overlap_frames()],
[.find_rescue()],
[.incoming_upstream_shift()],
[.needs_upstream_check()]
}
\keyword{internal}
