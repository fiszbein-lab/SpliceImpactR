% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_multi_analysis.R
\name{plot_alignment_summary}
\alias{plot_alignment_summary}
\title{Plot alignment score distribution and coding summary}
\usage{
plot_alignment_summary(
  hits,
  mode = c("protein", "transcript")[1],
  output_file = NULL
)
}
\arguments{
\item{hits}{`data.frame` or `data.table` containing
`prot_pid` or `dna_pid` and `summary_classification` columns.}

\item{mode}{Character, either `"protein"` (uses `prot_pid`)
or `"transcript"` (uses `dna_pid`).}

\item{output_file}{Optional path to save the combined plot.}
}
\value{
A composite `ggplot` object (from `ggpubr::ggarrange`)
showing stacked bar counts by coding class and histogram of
alignment identity scores.
}
\description{
Visualizes alignment scores (`prot_pid` or `dna_pid`) and coding class
composition of hits, showing both the categorical composition and
histogram of alignment identity values.
}
\examples{
sample_frame <- data.frame(path = c(check_extdata_dir('rawData/control_S5/'),
                                    check_extdata_dir('rawData/control_S6/'),
                                    check_extdata_dir('rawData/control_S7/'),
                                    check_extdata_dir('rawData/control_S8/'),
                                    check_extdata_dir('rawData/case_S1/'),
                                    check_extdata_dir('rawData/case_S2/'),
                                    check_extdata_dir('rawData/case_S3/'),
                                    check_extdata_dir('rawData/case_S4/')),
                           sample_name  = c("S5", "S6", "S7", "S8", "S1", "S2", "S3", "S4"),
                           condition    = c("control", "control", "control", "control", "case",  "case",  "case",  "case"),
                           stringsAsFactors = FALSE)
hit_index <- get_hitindex(sample_frame)
res <- get_differential_inclusion(hit_index)
annotation_df <- get_annotation(load = "test")
matched <- get_matched_events_chunked(res, annotation_df$annotations, chunk_size = 2000)
x_seq <- attach_sequences(matched, annotation_df$sequences)
pairs <- get_pairs(x_seq, source="multi")
seq_compare <-compare_sequence_frame(pairs, annots$annotations)
alignment_summary <- plot_alignment_summary(seq_compare)
}
\seealso{
[plot_length_comparison()]
}
