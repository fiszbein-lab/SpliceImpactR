% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_annotations.R
\name{get_annotation}
\alias{get_annotation}
\title{Load and cache GENCODE annotations, sequences, and hybrid exon annotations}
\usage{
get_annotation(
  load = c("link", "path", "cached", "test"),
  base_dir = NULL,
  species = c("human", "mouse")[1],
  release = 45,
  gtf_path = NULL,
  transcript_path = NULL,
  translation_path = NULL,
  filter_tsl = c("1", "2", "3", "4", "5")[1:3]
)
}
\arguments{
\item{load}{Character string specifying load mode:
one of `"link"`, `"path"`, `"cached"`, `"test"`.}

\item{base_dir}{Directory to cache/load processed objects.}

\item{species}{Species label used in filenames (default `"human"`).}

\item{release}{GENCODE release version (default `45`).}

\item{gtf_path}{Path to a GTF file when `load = "path"`.}

\item{transcript_path}{Path to transcript FASTA (.fa/.fa.gz) when `load = "path"`.}

\item{translation_path}{Path to protein FASTA (.fa/.fa.gz) when `load = "path"`.}

\item{filter_tsl}{Transcript support levels to retain (default `c("1","2","3")`).
Transcripts outside this set are dropped unless the row is a gene record.}
}
\value{
A list with:
\describe{
  \item{`annotations`}{Processed long-format GTF as `data.table`}
  \item{`sequences`}{List with elements `transcripts` and `proteins` (or `NULL` if not loaded)}
  \item{`hybrids`}{Hybrid exon annotation list}
}
}
\description{
This function loads GENCODE gene models (GTF), processes exon annotations,
extracts transcript and protein sequences, identifies hybrid exons, and
optionally caches the processed objects for future fast access.
}
\details{
Four loading modes are supported:
\describe{
  \item{`test`}{Load small internal test data shipped with the package.}
  \item{`cached`}{Load previously cached GTF, transcript sequences, protein sequences, and hybrid tables from `base_dir`.}
  \item{`path`}{Read local GTF and FASTA files, process, then cache results in `base_dir`.}
  \item{`link`}{Download GENCODE files from URLs, process, then cache results in `base_dir`.}
}

Cached files created in `base_dir`:
\preformatted{
{species}_gencode_v{release}.gtf.rds
{species}_gencode_v{release}_transcripts.rds
{species}_gencode_v{release}_proteins.rds
{species}_gencode_v{release}_hybrids.rds
}


Uses internal helpers:
* `resolve_output_dir()` — ensure/create cache directory
* `.si_prepare_assets()` — fetch remote GENCODE files if necessary
* `load_gtf_long()` — parse and normalize GTF to exon-long format
* `get_sequences()` — extract transcript and translation sequences
* `identify_hybrid_exons_split()` — detect hybrid exons
}
\examples{
# Load bundled test data
ann <- get_annotation(load = "test")

#
#  # Load from local files and cache results
#  ann <- get_annotation(
#    load = "path",
#    base_dir = "/project/annotation_cache/",
#    gtf_path = "gencode.v45.annotation.gtf.gz",
#    transcript_path = "gencode.v45.pc_transcripts.fa.gz",
#    translation_path = "gencode.v45.pc_translations.fa.gz"
#  )

#  # Download files, process, and cache
#  ann <- get_annotation(
#    load = "link",
#    base_dir = "/project/annotation_cache/"
#  )

# Load from cached RDS (fast)
#  ann <- get_annotation(
#    load = "cached",
#    base_dir = "/project/annotation_cache/"
#  )

}
\seealso{
`load_gtf_long()`, `get_sequences()`, `identify_hybrid_exons_split()`
}
