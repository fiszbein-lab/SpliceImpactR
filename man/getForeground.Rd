% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getForeground.R
\name{getForeground}
\alias{getForeground}
\title{get Foreground from differentially included transcripts in samples}
\usage{
getForeground(
  input,
  test_names,
  control_names,
  thresh = 0.1,
  fdr = 0.05,
  mOverlap,
  exon_type,
  output_location = NULL,
  cores = 1,
  gtf,
  max_zero_prop = 0.5,
  min_prop_samples = 0.5,
  translations
)
}
\arguments{
\item{input}{diExon info from the differentially included functions}

\item{test_names}{path to test files without .{event}PSI}

\item{control_names}{path to control files without .{event}PSI}

\item{thresh}{delta psi threshold to filter}

\item{fdr}{adj p to filter for}

\item{mOverlap}{overlap to identify a match to annotation}

\item{exon_type}{placeholder for other functions}

\item{output_location}{location to make background directory}

\item{cores}{number of cores to assign}

\item{gtf}{full output from setup_gtf}

\item{max_zero_prop}{max number of zeros in to count an exon}

\item{min_prop_samples}{min proportion of samples needed to not be counted as outliers}

\item{translations}{from getTranslations}
}
\value{
matched : matched transcripts dataframe, bed : bed file of the matched transcripts
proBed : output for further functions with protein code and protein info,
proFast : fasta file of proteins identified in proBed
}
\description{
get Foreground from differentially included transcripts in samples
}
\examples{
pdir <- system.file("extdata", package="SpliceImpactR")
dataDirectory <- paste0(pdir, "/")
test_group <- paste0(dataDirectory, "rawData/", c("test1","test2", "test3"))
control_group <- paste0(dataDirectory, "rawData/", c("control1", "control2", "control3"))

result <- differential_inclusion_HITindex(test_names = test_group,
                                          control_names = control_group,
                                          et = "AFE",
                                          outlier_threshold = "Inf",
                                          minReads = 10,
                                          min_prop_samples = 0,
                                          chosen_method = "qbGLM"
                                          )
gtf_sample <- list(gtf = readr::read_csv(paste0(dataDirectory, "gtf_limited.csv")),
            transcript_gtf = readr::read_csv(paste0(dataDirectory, "transcript_gtf_limited.csv")))
translations_sample <- readr::read_lines(paste0(dataDirectory, "translations_limited.csv"))

fg <- getForeground(input = result,
                            test_names = test_group,
                            control_names = control_group,
                            thresh = .1,
                            fdr = .05,
                            mOverlap = .1,
                            exon_type = "AFE",
                            output_location = NULL,
                            cores = 1,
                            gtf = gtf_sample,
                            max_zero_prop = 1,
                            min_prop_samples = 0,
                            translations = translations_sample)


}
