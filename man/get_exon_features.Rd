% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_protein_features.R
\name{get_exon_features}
\alias{get_exon_features}
\title{Map protein features to coding exons}
\usage{
get_exon_features(gtf_dt, feat, inclusive = TRUE)
}
\arguments{
\item{gtf_dt}{A \code{data.frame} or \code{data.table} containing
transcript and exon annotation, including \code{type},
\code{transcript_id}, \code{cds_rel_start}, and \code{cds_rel_stop}
columns (see [add_exon_coding_information()]).}

\item{feat}{A \code{data.frame} or \code{data.table} of long-format
protein features (from [get_protein_features()] or
[get_comprehensive_annotations()]) containing columns
\code{ensembl_transcript_id}, \code{start}, \code{stop},
\code{database}, \code{feature_id}, \code{name}, and
\code{alt_name}.}

\item{inclusive}{Logical; whether to round both feature and exon
boundaries upward when converting from nucleotide to amino acid
coordinates (default \code{TRUE}). If \code{FALSE}, downstream
exons “own” partial codons to avoid double counting.}
}
\value{
A \code{data.table} of overlapping feature–exon pairs with
  amino acid coordinates (\code{overlap_aa_start}, \code{overlap_aa_end},
  \code{overlap_aa_len}) and associated exon and feature metadata.
}
\description{
Overlaps amino acid–based protein features (e.g., InterPro, TMHMM)
with exon coding spans defined by transcript‐relative CDS coordinates.
}
\examples{
annotation_df <- get_annotation(load = 'test')
interpro_features <- get_protein_features(c("interpro"), annotations$annotations, timeout = 600, test = TRUE)
protein_feature_total <- get_comprehensive_annotations(list(interpro_features))

exon_features <- get_exon_features(annotation_df$annotations, protein_feature_total)

}
